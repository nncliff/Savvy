# version: "3.8"
services:
  web:
    build:
      dockerfile: Dockerfile.dev
    volumes:
      - data:/data
      - ..:/app
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - .env  # Automatically load all variables from this file
    environment:
      DATABASE_URL: postgres://karakeep:karakeep_password@postgres:5432/karakeep
      DATA_DIR: /data
      MEILI_ADDR: http://meilisearch:7700
    command:
      - pnpm
      - web
    working_dir: /app
    depends_on:
      prep:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  workers:
    build:
      dockerfile: Dockerfile.dev
    volumes:
      - data:/data
      - ..:/app
    env_file:
      - .env
    working_dir: /app
    environment:
      MEILI_ADDR: http://meilisearch:7700
      BROWSER_WEB_URL: http://chrome:9222
      DATA_DIR: /data
      DATABASE_URL: postgres://karakeep:karakeep_password@postgres:5432/karakeep
      # OPENAI_API_KEY: ...
    command:
      - pnpm
      - workers
    depends_on:
      prep:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  prep:
    build:
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    working_dir: /app
    environment:
      DATA_DIR: /data
      DATABASE_URL: postgres://karakeep:karakeep_password@postgres:5432/karakeep
    volumes:
      - data:/data
      - ..:/app
    command:
      - /bin/sh
      - -c
      - |
        pnpm install --frozen-lockfile && \
        pnpm run db:migrate
    depends_on:
      postgres:
        condition: service_healthy

  setup-trigger:
    image: postgres:15
    environment:
      PGPASSWORD: karakeep_password
    volumes:
      - ../llamaindex/setup_bookmark_trigger.sql:/setup_bookmark_trigger.sql
    command:
      - /bin/sh
      - -c
      - |
        psql -h postgres -U karakeep -d karakeep -f /setup_bookmark_trigger.sql
    depends_on:
      prep:
        condition: service_completed_successfully

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: karakeep
      POSTGRES_USER: karakeep
      POSTGRES_PASSWORD: karakeep_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U karakeep"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  chrome:
    image: gcr.io/zenika-hub/alpine-chrome:123
    command:
      - --no-sandbox
      - --disable-gpu
      - --disable-dev-shm-usage
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222
      - --hide-scrollbars

  meilisearch:
    image: getmeili/meilisearch:v1.13.3
    env_file:
      - .env
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    ports:
      - "127.0.0.1:7700:7700"
    volumes:
      - meilisearch:/meili_data

  llamaindex:
    image: python:3.11
    container_name: llamaindex
    ports:
      - "127.0.0.1:8080:8080"  # Expose RAG API on port 8080
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://karakeep:karakeep_password@postgres:5432/karakeep
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: karakeep
      POSTGRES_USER: karakeep
      POSTGRES_PASSWORD: karakeep_password
    volumes:
      - ../llamaindex:/app/llamaindex
      - llamaindex_storage:/app/llamaindex/storage
    working_dir: /app/llamaindex
    command:
      - /bin/sh
      - -c
      - |
        pip install --upgrade pip && \
        pip install -r requirements.txt && \
        uvicorn rag_api:app --host 0.0.0.0 --port 8080 --reload
    depends_on:
      setup-trigger:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  ngrok:
    image: ngrok/ngrok:latest
    env_file:
      - .env
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    command:
      - http
      - --domain=woodcock-gorgeous-eminently.ngrok-free.app
      - --scheme=https
      - --host-header=localhost:3000
      - web:3000
    depends_on:
      web:
        condition: service_started
    ports:
      - 80:80

volumes:
  meilisearch:
  data:
  postgres_data:
  llamaindex_storage:
